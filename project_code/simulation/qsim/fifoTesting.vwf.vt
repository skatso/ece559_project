// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/22/2016 01:01:49"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          fifo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module fifo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [31:0] ctrl_in;
reg ctrl_write;
reg [7:0] hi_in;
reg hi_write;
reg [7:0] lo_in;
reg lo_write;
reg read_next;
reg reset;
// wires                                               
wire [31:0] ctrl_out;
wire hi_full;
wire lo_full;
wire [7:0] out_byte;

// assign statements (if any)                          
fifo i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.ctrl_in(ctrl_in),
	.ctrl_out(ctrl_out),
	.ctrl_write(ctrl_write),
	.hi_full(hi_full),
	.hi_in(hi_in),
	.hi_write(hi_write),
	.lo_full(lo_full),
	.lo_in(lo_in),
	.lo_write(lo_write),
	.out_byte(out_byte),
	.read_next(read_next),
	.reset(reset)
);
initial 
begin 
#1000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #5000 1'b1;
	#5000;
end 
// ctrl_in[ 31 ]
initial
begin
	ctrl_in[31] = 1'b0;
	ctrl_in[31] = #240000 1'b1;
	ctrl_in[31] = #40000 1'b0;
	ctrl_in[31] = #40000 1'b1;
	ctrl_in[31] = #40000 1'b0;
	ctrl_in[31] = #40000 1'b1;
	ctrl_in[31] = #80000 1'b0;
	ctrl_in[31] = #80000 1'b1;
	ctrl_in[31] = #80000 1'b0;
	ctrl_in[31] = #40000 1'b1;
	ctrl_in[31] = #80000 1'b0;
	ctrl_in[31] = #40000 1'b1;
	ctrl_in[31] = #80000 1'b0;
	ctrl_in[31] = #80000 1'b1;
end 
// ctrl_in[ 30 ]
initial
begin
	ctrl_in[30] = 1'b1;
	ctrl_in[30] = #40000 1'b0;
	ctrl_in[30] = #40000 1'b1;
	ctrl_in[30] = #120000 1'b0;
	ctrl_in[30] = #40000 1'b1;
	ctrl_in[30] = #40000 1'b0;
	ctrl_in[30] = #40000 1'b1;
	ctrl_in[30] = #40000 1'b0;
	ctrl_in[30] = #40000 1'b1;
	ctrl_in[30] = #240000 1'b0;
	ctrl_in[30] = #40000 1'b1;
	ctrl_in[30] = #80000 1'b0;
	ctrl_in[30] = #80000 1'b1;
	ctrl_in[30] = #120000 1'b0;
end 
// ctrl_in[ 29 ]
initial
begin
	ctrl_in[29] = 1'b1;
	ctrl_in[29] = #40000 1'b0;
	ctrl_in[29] = #40000 1'b1;
	ctrl_in[29] = #80000 1'b0;
	ctrl_in[29] = #40000 1'b1;
	ctrl_in[29] = #160000 1'b0;
	ctrl_in[29] = #80000 1'b1;
	ctrl_in[29] = #160000 1'b0;
	ctrl_in[29] = #40000 1'b1;
	ctrl_in[29] = #40000 1'b0;
	ctrl_in[29] = #40000 1'b1;
	ctrl_in[29] = #80000 1'b0;
	ctrl_in[29] = #120000 1'b1;
	ctrl_in[29] = #40000 1'b0;
end 
// ctrl_in[ 28 ]
initial
begin
	ctrl_in[28] = 1'b1;
	ctrl_in[28] = #80000 1'b0;
	ctrl_in[28] = #40000 1'b1;
	ctrl_in[28] = #40000 1'b0;
	ctrl_in[28] = #120000 1'b1;
	ctrl_in[28] = #80000 1'b0;
	ctrl_in[28] = #40000 1'b1;
	ctrl_in[28] = #40000 1'b0;
	ctrl_in[28] = #40000 1'b1;
	ctrl_in[28] = #200000 1'b0;
	ctrl_in[28] = #160000 1'b1;
	ctrl_in[28] = #80000 1'b0;
end 
// ctrl_in[ 27 ]
initial
begin
	ctrl_in[27] = 1'b1;
	ctrl_in[27] = #40000 1'b0;
	ctrl_in[27] = #40000 1'b1;
	ctrl_in[27] = #40000 1'b0;
	ctrl_in[27] = #80000 1'b1;
	ctrl_in[27] = #120000 1'b0;
	ctrl_in[27] = #120000 1'b1;
	ctrl_in[27] = #40000 1'b0;
	ctrl_in[27] = #80000 1'b1;
	ctrl_in[27] = #40000 1'b0;
	ctrl_in[27] = #80000 1'b1;
	ctrl_in[27] = #40000 1'b0;
	ctrl_in[27] = #40000 1'b1;
	ctrl_in[27] = #80000 1'b0;
end 
// ctrl_in[ 26 ]
initial
begin
	ctrl_in[26] = 1'b0;
	ctrl_in[26] = #80000 1'b1;
	ctrl_in[26] = #120000 1'b0;
	ctrl_in[26] = #240000 1'b1;
	ctrl_in[26] = #80000 1'b0;
	ctrl_in[26] = #80000 1'b1;
	ctrl_in[26] = #40000 1'b0;
	ctrl_in[26] = #40000 1'b1;
	ctrl_in[26] = #80000 1'b0;
	ctrl_in[26] = #80000 1'b1;
end 
// ctrl_in[ 25 ]
initial
begin
	ctrl_in[25] = 1'b0;
	ctrl_in[25] = #40000 1'b1;
	ctrl_in[25] = #120000 1'b0;
	ctrl_in[25] = #80000 1'b1;
	ctrl_in[25] = #80000 1'b0;
	ctrl_in[25] = #160000 1'b1;
	ctrl_in[25] = #80000 1'b0;
	ctrl_in[25] = #40000 1'b1;
	ctrl_in[25] = #120000 1'b0;
	ctrl_in[25] = #80000 1'b1;
	ctrl_in[25] = #120000 1'b0;
	ctrl_in[25] = #40000 1'b1;
end 
// ctrl_in[ 24 ]
initial
begin
	ctrl_in[24] = 1'b1;
	ctrl_in[24] = #40000 1'b0;
	ctrl_in[24] = #40000 1'b1;
	ctrl_in[24] = #40000 1'b0;
	ctrl_in[24] = #80000 1'b1;
	ctrl_in[24] = #120000 1'b0;
	ctrl_in[24] = #40000 1'b1;
	ctrl_in[24] = #160000 1'b0;
	ctrl_in[24] = #40000 1'b1;
	ctrl_in[24] = #120000 1'b0;
	ctrl_in[24] = #40000 1'b1;
	ctrl_in[24] = #80000 1'b0;
	ctrl_in[24] = #80000 1'b1;
	ctrl_in[24] = #80000 1'b0;
end 
// ctrl_in[ 23 ]
initial
begin
	ctrl_in[23] = 1'b1;
	ctrl_in[23] = #80000 1'b0;
	ctrl_in[23] = #40000 1'b1;
	ctrl_in[23] = #200000 1'b0;
	ctrl_in[23] = #40000 1'b1;
	ctrl_in[23] = #80000 1'b0;
	ctrl_in[23] = #40000 1'b1;
	ctrl_in[23] = #80000 1'b0;
	ctrl_in[23] = #80000 1'b1;
	ctrl_in[23] = #40000 1'b0;
	ctrl_in[23] = #40000 1'b1;
	ctrl_in[23] = #40000 1'b0;
	ctrl_in[23] = #40000 1'b1;
	ctrl_in[23] = #80000 1'b0;
	ctrl_in[23] = #40000 1'b1;
	ctrl_in[23] = #40000 1'b0;
end 
// ctrl_in[ 22 ]
initial
begin
	ctrl_in[22] = 1'b1;
	ctrl_in[22] = #80000 1'b0;
	ctrl_in[22] = #120000 1'b1;
	ctrl_in[22] = #40000 1'b0;
	ctrl_in[22] = #40000 1'b1;
	ctrl_in[22] = #80000 1'b0;
	ctrl_in[22] = #40000 1'b1;
	ctrl_in[22] = #80000 1'b0;
	ctrl_in[22] = #440000 1'b1;
end 
// ctrl_in[ 21 ]
initial
begin
	ctrl_in[21] = 1'b0;
	ctrl_in[21] = #120000 1'b1;
	ctrl_in[21] = #40000 1'b0;
	ctrl_in[21] = #40000 1'b1;
	ctrl_in[21] = #80000 1'b0;
	ctrl_in[21] = #40000 1'b1;
	ctrl_in[21] = #200000 1'b0;
	ctrl_in[21] = #40000 1'b1;
	ctrl_in[21] = #40000 1'b0;
	ctrl_in[21] = #80000 1'b1;
	ctrl_in[21] = #120000 1'b0;
	ctrl_in[21] = #160000 1'b1;
end 
// ctrl_in[ 20 ]
initial
begin
	ctrl_in[20] = 1'b0;
	ctrl_in[20] = #40000 1'b1;
	ctrl_in[20] = #40000 1'b0;
	ctrl_in[20] = #40000 1'b1;
	ctrl_in[20] = #40000 1'b0;
	ctrl_in[20] = #80000 1'b1;
	ctrl_in[20] = #40000 1'b0;
	ctrl_in[20] = #240000 1'b1;
	ctrl_in[20] = #40000 1'b0;
	ctrl_in[20] = #40000 1'b1;
	ctrl_in[20] = #40000 1'b0;
	ctrl_in[20] = #120000 1'b1;
	ctrl_in[20] = #40000 1'b0;
	ctrl_in[20] = #40000 1'b1;
	ctrl_in[20] = #80000 1'b0;
	ctrl_in[20] = #40000 1'b1;
end 
// ctrl_in[ 19 ]
initial
begin
	ctrl_in[19] = 1'b0;
	ctrl_in[19] = #40000 1'b1;
	ctrl_in[19] = #80000 1'b0;
	ctrl_in[19] = #80000 1'b1;
	ctrl_in[19] = #40000 1'b0;
	ctrl_in[19] = #120000 1'b1;
	ctrl_in[19] = #80000 1'b0;
	ctrl_in[19] = #40000 1'b1;
	ctrl_in[19] = #40000 1'b0;
	ctrl_in[19] = #80000 1'b1;
	ctrl_in[19] = #40000 1'b0;
	ctrl_in[19] = #40000 1'b1;
	ctrl_in[19] = #240000 1'b0;
end 
// ctrl_in[ 18 ]
initial
begin
	ctrl_in[18] = 1'b1;
	ctrl_in[18] = #40000 1'b0;
	ctrl_in[18] = #40000 1'b1;
	ctrl_in[18] = #40000 1'b0;
	ctrl_in[18] = #120000 1'b1;
	ctrl_in[18] = #80000 1'b0;
	ctrl_in[18] = #160000 1'b1;
	ctrl_in[18] = #40000 1'b0;
	ctrl_in[18] = #40000 1'b1;
	ctrl_in[18] = #40000 1'b0;
	ctrl_in[18] = #40000 1'b1;
	ctrl_in[18] = #80000 1'b0;
	ctrl_in[18] = #40000 1'b1;
	ctrl_in[18] = #120000 1'b0;
end 
// ctrl_in[ 17 ]
initial
begin
	ctrl_in[17] = 1'b1;
	ctrl_in[17] = #40000 1'b0;
	ctrl_in[17] = #80000 1'b1;
	ctrl_in[17] = #40000 1'b0;
	ctrl_in[17] = #80000 1'b1;
	ctrl_in[17] = #40000 1'b0;
	ctrl_in[17] = #80000 1'b1;
	ctrl_in[17] = #160000 1'b0;
	ctrl_in[17] = #40000 1'b1;
	ctrl_in[17] = #40000 1'b0;
	ctrl_in[17] = #40000 1'b1;
	ctrl_in[17] = #40000 1'b0;
	ctrl_in[17] = #120000 1'b1;
	ctrl_in[17] = #120000 1'b0;
end 
// ctrl_in[ 16 ]
initial
begin
	ctrl_in[16] = 1'b1;
	ctrl_in[16] = #40000 1'b0;
	ctrl_in[16] = #80000 1'b1;
	ctrl_in[16] = #40000 1'b0;
	ctrl_in[16] = #40000 1'b1;
	ctrl_in[16] = #80000 1'b0;
	ctrl_in[16] = #120000 1'b1;
	ctrl_in[16] = #240000 1'b0;
	ctrl_in[16] = #40000 1'b1;
	ctrl_in[16] = #40000 1'b0;
	ctrl_in[16] = #40000 1'b1;
	ctrl_in[16] = #40000 1'b0;
	ctrl_in[16] = #40000 1'b1;
	ctrl_in[16] = #80000 1'b0;
end 
// ctrl_in[ 15 ]
initial
begin
	ctrl_in[15] = 1'b0;
	ctrl_in[15] = #40000 1'b1;
	ctrl_in[15] = #120000 1'b0;
	ctrl_in[15] = #80000 1'b1;
	ctrl_in[15] = #80000 1'b0;
	ctrl_in[15] = #40000 1'b1;
	ctrl_in[15] = #40000 1'b0;
	ctrl_in[15] = #40000 1'b1;
	ctrl_in[15] = #40000 1'b0;
	ctrl_in[15] = #200000 1'b1;
	ctrl_in[15] = #40000 1'b0;
	ctrl_in[15] = #80000 1'b1;
	ctrl_in[15] = #40000 1'b0;
	ctrl_in[15] = #40000 1'b1;
	ctrl_in[15] = #80000 1'b0;
end 
// ctrl_in[ 14 ]
initial
begin
	ctrl_in[14] = 1'b1;
	ctrl_in[14] = #40000 1'b0;
	ctrl_in[14] = #40000 1'b1;
	ctrl_in[14] = #120000 1'b0;
	ctrl_in[14] = #40000 1'b1;
	ctrl_in[14] = #80000 1'b0;
	ctrl_in[14] = #40000 1'b1;
	ctrl_in[14] = #80000 1'b0;
	ctrl_in[14] = #40000 1'b1;
	ctrl_in[14] = #40000 1'b0;
	ctrl_in[14] = #160000 1'b1;
	ctrl_in[14] = #40000 1'b0;
	ctrl_in[14] = #40000 1'b1;
	ctrl_in[14] = #80000 1'b0;
	ctrl_in[14] = #40000 1'b1;
	ctrl_in[14] = #40000 1'b0;
	ctrl_in[14] = #40000 1'b1;
end 
// ctrl_in[ 13 ]
initial
begin
	ctrl_in[13] = 1'b1;
	ctrl_in[13] = #40000 1'b0;
	ctrl_in[13] = #80000 1'b1;
	ctrl_in[13] = #120000 1'b0;
	ctrl_in[13] = #80000 1'b1;
	ctrl_in[13] = #240000 1'b0;
	ctrl_in[13] = #40000 1'b1;
	ctrl_in[13] = #240000 1'b0;
	ctrl_in[13] = #40000 1'b1;
	ctrl_in[13] = #40000 1'b0;
end 
// ctrl_in[ 12 ]
initial
begin
	ctrl_in[12] = 1'b1;
	ctrl_in[12] = #160000 1'b0;
	ctrl_in[12] = #40000 1'b1;
	ctrl_in[12] = #80000 1'b0;
	ctrl_in[12] = #40000 1'b1;
	ctrl_in[12] = #120000 1'b0;
	ctrl_in[12] = #120000 1'b1;
	ctrl_in[12] = #40000 1'b0;
	ctrl_in[12] = #40000 1'b1;
	ctrl_in[12] = #40000 1'b0;
	ctrl_in[12] = #40000 1'b1;
	ctrl_in[12] = #80000 1'b0;
end 
// ctrl_in[ 11 ]
initial
begin
	ctrl_in[11] = 1'b0;
	ctrl_in[11] = #40000 1'b1;
	ctrl_in[11] = #40000 1'b0;
	ctrl_in[11] = #120000 1'b1;
	ctrl_in[11] = #120000 1'b0;
	ctrl_in[11] = #80000 1'b1;
	ctrl_in[11] = #40000 1'b0;
	ctrl_in[11] = #80000 1'b1;
	ctrl_in[11] = #40000 1'b0;
	ctrl_in[11] = #240000 1'b1;
end 
// ctrl_in[ 10 ]
initial
begin
	ctrl_in[10] = 1'b0;
	ctrl_in[10] = #40000 1'b1;
	ctrl_in[10] = #440000 1'b0;
	ctrl_in[10] = #120000 1'b1;
	ctrl_in[10] = #80000 1'b0;
	ctrl_in[10] = #80000 1'b1;
	ctrl_in[10] = #120000 1'b0;
	ctrl_in[10] = #80000 1'b1;
end 
// ctrl_in[ 9 ]
initial
begin
	ctrl_in[9] = 1'b1;
	ctrl_in[9] = #40000 1'b0;
	ctrl_in[9] = #120000 1'b1;
	ctrl_in[9] = #40000 1'b0;
	ctrl_in[9] = #80000 1'b1;
	ctrl_in[9] = #40000 1'b0;
	ctrl_in[9] = #80000 1'b1;
	ctrl_in[9] = #40000 1'b0;
	ctrl_in[9] = #40000 1'b1;
	ctrl_in[9] = #40000 1'b0;
	ctrl_in[9] = #40000 1'b1;
	ctrl_in[9] = #40000 1'b0;
	ctrl_in[9] = #160000 1'b1;
	ctrl_in[9] = #40000 1'b0;
	ctrl_in[9] = #80000 1'b1;
	ctrl_in[9] = #40000 1'b0;
end 
// ctrl_in[ 8 ]
initial
begin
	ctrl_in[8] = 1'b1;
	ctrl_in[8] = #160000 1'b0;
	ctrl_in[8] = #120000 1'b1;
	ctrl_in[8] = #40000 1'b0;
	ctrl_in[8] = #40000 1'b1;
	ctrl_in[8] = #120000 1'b0;
	ctrl_in[8] = #200000 1'b1;
	ctrl_in[8] = #80000 1'b0;
	ctrl_in[8] = #40000 1'b1;
	ctrl_in[8] = #160000 1'b0;
end 
// ctrl_in[ 7 ]
initial
begin
	ctrl_in[7] = 1'b1;
	ctrl_in[7] = #80000 1'b0;
	ctrl_in[7] = #40000 1'b1;
	ctrl_in[7] = #40000 1'b0;
	ctrl_in[7] = #80000 1'b1;
	ctrl_in[7] = #40000 1'b0;
	ctrl_in[7] = #40000 1'b1;
	ctrl_in[7] = #160000 1'b0;
	ctrl_in[7] = #80000 1'b1;
	ctrl_in[7] = #80000 1'b0;
	ctrl_in[7] = #40000 1'b1;
	ctrl_in[7] = #40000 1'b0;
	ctrl_in[7] = #120000 1'b1;
	ctrl_in[7] = #80000 1'b0;
end 
// ctrl_in[ 6 ]
initial
begin
	ctrl_in[6] = 1'b0;
	ctrl_in[6] = #80000 1'b1;
	ctrl_in[6] = #80000 1'b0;
	ctrl_in[6] = #40000 1'b1;
	ctrl_in[6] = #120000 1'b0;
	ctrl_in[6] = #120000 1'b1;
	ctrl_in[6] = #80000 1'b0;
	ctrl_in[6] = #40000 1'b1;
	ctrl_in[6] = #120000 1'b0;
	ctrl_in[6] = #240000 1'b1;
	ctrl_in[6] = #40000 1'b0;
end 
// ctrl_in[ 5 ]
initial
begin
	ctrl_in[5] = 1'b0;
	ctrl_in[5] = #40000 1'b1;
	ctrl_in[5] = #40000 1'b0;
	ctrl_in[5] = #80000 1'b1;
	ctrl_in[5] = #40000 1'b0;
	ctrl_in[5] = #40000 1'b1;
	ctrl_in[5] = #120000 1'b0;
	ctrl_in[5] = #80000 1'b1;
	ctrl_in[5] = #160000 1'b0;
	ctrl_in[5] = #80000 1'b1;
	ctrl_in[5] = #80000 1'b0;
	ctrl_in[5] = #80000 1'b1;
	ctrl_in[5] = #80000 1'b0;
end 
// ctrl_in[ 4 ]
initial
begin
	ctrl_in[4] = 1'b0;
	ctrl_in[4] = #40000 1'b1;
	ctrl_in[4] = #40000 1'b0;
	ctrl_in[4] = #200000 1'b1;
	ctrl_in[4] = #40000 1'b0;
	ctrl_in[4] = #40000 1'b1;
	ctrl_in[4] = #80000 1'b0;
	ctrl_in[4] = #120000 1'b1;
	ctrl_in[4] = #40000 1'b0;
	ctrl_in[4] = #40000 1'b1;
	ctrl_in[4] = #200000 1'b0;
end 
// ctrl_in[ 3 ]
initial
begin
	ctrl_in[3] = 1'b0;
	ctrl_in[3] = #40000 1'b1;
	ctrl_in[3] = #160000 1'b0;
	ctrl_in[3] = #40000 1'b1;
	ctrl_in[3] = #40000 1'b0;
	ctrl_in[3] = #80000 1'b1;
	ctrl_in[3] = #80000 1'b0;
	ctrl_in[3] = #40000 1'b1;
	ctrl_in[3] = #40000 1'b0;
	ctrl_in[3] = #40000 1'b1;
	ctrl_in[3] = #40000 1'b0;
	ctrl_in[3] = #80000 1'b1;
	ctrl_in[3] = #160000 1'b0;
	ctrl_in[3] = #80000 1'b1;
	ctrl_in[3] = #40000 1'b0;
end 
// ctrl_in[ 2 ]
initial
begin
	ctrl_in[2] = 1'b1;
	ctrl_in[2] = #280000 1'b0;
	ctrl_in[2] = #40000 1'b1;
	ctrl_in[2] = #80000 1'b0;
	ctrl_in[2] = #40000 1'b1;
	ctrl_in[2] = #40000 1'b0;
	ctrl_in[2] = #80000 1'b1;
	ctrl_in[2] = #280000 1'b0;
	ctrl_in[2] = #80000 1'b1;
end 
// ctrl_in[ 1 ]
initial
begin
	ctrl_in[1] = 1'b1;
	ctrl_in[1] = #80000 1'b0;
	ctrl_in[1] = #120000 1'b1;
	ctrl_in[1] = #40000 1'b0;
	ctrl_in[1] = #40000 1'b1;
	ctrl_in[1] = #40000 1'b0;
	ctrl_in[1] = #120000 1'b1;
	ctrl_in[1] = #160000 1'b0;
	ctrl_in[1] = #40000 1'b1;
	ctrl_in[1] = #280000 1'b0;
	ctrl_in[1] = #40000 1'b1;
end 
// ctrl_in[ 0 ]
initial
begin
	ctrl_in[0] = 1'b0;
	ctrl_in[0] = #40000 1'b1;
	ctrl_in[0] = #240000 1'b0;
	ctrl_in[0] = #40000 1'b1;
	ctrl_in[0] = #120000 1'b0;
	ctrl_in[0] = #80000 1'b1;
	ctrl_in[0] = #40000 1'b0;
	ctrl_in[0] = #80000 1'b1;
	ctrl_in[0] = #120000 1'b0;
	ctrl_in[0] = #40000 1'b1;
	ctrl_in[0] = #40000 1'b0;
	ctrl_in[0] = #40000 1'b1;
end 

// ctrl_write
initial
begin
	ctrl_write = 1'b0;
	ctrl_write = #10000 1'b1;
	ctrl_write = #600000 1'b0;
end 
// hi_in[ 7 ]
initial
begin
	hi_in[7] = 1'b0;
	hi_in[7] = #40000 1'b1;
	hi_in[7] = #40000 1'b0;
	hi_in[7] = #40000 1'b1;
	hi_in[7] = #40000 1'b0;
	hi_in[7] = #160000 1'b1;
	hi_in[7] = #80000 1'b0;
	hi_in[7] = #40000 1'b1;
	hi_in[7] = #200000 1'b0;
	hi_in[7] = #80000 1'b1;
	hi_in[7] = #40000 1'b0;
	hi_in[7] = #120000 1'b1;
	hi_in[7] = #40000 1'b0;
	hi_in[7] = #40000 1'b1;
end 
// hi_in[ 6 ]
initial
begin
	hi_in[6] = 1'b1;
	hi_in[6] = #160000 1'b0;
	hi_in[6] = #40000 1'b1;
	hi_in[6] = #80000 1'b0;
	hi_in[6] = #80000 1'b1;
	hi_in[6] = #120000 1'b0;
	hi_in[6] = #40000 1'b1;
	hi_in[6] = #240000 1'b0;
	hi_in[6] = #40000 1'b1;
	hi_in[6] = #40000 1'b0;
	hi_in[6] = #40000 1'b1;
	hi_in[6] = #80000 1'b0;
end 
// hi_in[ 5 ]
initial
begin
	hi_in[5] = 1'b1;
	hi_in[5] = #200000 1'b0;
	hi_in[5] = #160000 1'b1;
	hi_in[5] = #80000 1'b0;
	hi_in[5] = #40000 1'b1;
	hi_in[5] = #40000 1'b0;
	hi_in[5] = #40000 1'b1;
	hi_in[5] = #120000 1'b0;
	hi_in[5] = #40000 1'b1;
	hi_in[5] = #40000 1'b0;
	hi_in[5] = #80000 1'b1;
	hi_in[5] = #40000 1'b0;
	hi_in[5] = #80000 1'b1;
end 
// hi_in[ 4 ]
initial
begin
	hi_in[4] = 1'b1;
	hi_in[4] = #40000 1'b0;
	hi_in[4] = #40000 1'b1;
	hi_in[4] = #40000 1'b0;
	hi_in[4] = #80000 1'b1;
	hi_in[4] = #120000 1'b0;
	hi_in[4] = #40000 1'b1;
	hi_in[4] = #40000 1'b0;
	hi_in[4] = #160000 1'b1;
	hi_in[4] = #40000 1'b0;
	hi_in[4] = #120000 1'b1;
	hi_in[4] = #80000 1'b0;
	hi_in[4] = #40000 1'b1;
	hi_in[4] = #120000 1'b0;
end 
// hi_in[ 3 ]
initial
begin
	hi_in[3] = 1'b1;
	hi_in[3] = #40000 1'b0;
	hi_in[3] = #120000 1'b1;
	hi_in[3] = #40000 1'b0;
	hi_in[3] = #40000 1'b1;
	hi_in[3] = #40000 1'b0;
	hi_in[3] = #80000 1'b1;
	hi_in[3] = #80000 1'b0;
	hi_in[3] = #40000 1'b1;
	hi_in[3] = #40000 1'b0;
	hi_in[3] = #40000 1'b1;
	hi_in[3] = #40000 1'b0;
	hi_in[3] = #40000 1'b1;
	hi_in[3] = #200000 1'b0;
	hi_in[3] = #40000 1'b1;
	hi_in[3] = #40000 1'b0;
	hi_in[3] = #40000 1'b1;
end 
// hi_in[ 2 ]
initial
begin
	hi_in[2] = 1'b0;
	hi_in[2] = #40000 1'b1;
	hi_in[2] = #240000 1'b0;
	hi_in[2] = #80000 1'b1;
	hi_in[2] = #160000 1'b0;
	hi_in[2] = #40000 1'b1;
	hi_in[2] = #40000 1'b0;
	hi_in[2] = #80000 1'b1;
	hi_in[2] = #40000 1'b0;
	hi_in[2] = #40000 1'b1;
	hi_in[2] = #40000 1'b0;
	hi_in[2] = #40000 1'b1;
	hi_in[2] = #80000 1'b0;
	hi_in[2] = #40000 1'b1;
end 
// hi_in[ 1 ]
initial
begin
	hi_in[1] = 1'b1;
	hi_in[1] = #80000 1'b0;
	hi_in[1] = #120000 1'b1;
	hi_in[1] = #80000 1'b0;
	hi_in[1] = #40000 1'b1;
	hi_in[1] = #80000 1'b0;
	hi_in[1] = #80000 1'b1;
	hi_in[1] = #280000 1'b0;
	hi_in[1] = #80000 1'b1;
	hi_in[1] = #120000 1'b0;
end 
// hi_in[ 0 ]
initial
begin
	hi_in[0] = 1'b1;
	hi_in[0] = #40000 1'b0;
	hi_in[0] = #80000 1'b1;
	hi_in[0] = #280000 1'b0;
	hi_in[0] = #40000 1'b1;
	hi_in[0] = #80000 1'b0;
	hi_in[0] = #80000 1'b1;
	hi_in[0] = #120000 1'b0;
	hi_in[0] = #40000 1'b1;
	hi_in[0] = #40000 1'b0;
	hi_in[0] = #40000 1'b1;
	hi_in[0] = #40000 1'b0;
	hi_in[0] = #40000 1'b1;
	hi_in[0] = #40000 1'b0;
end 

// hi_write
initial
begin
	hi_write = 1'b1;
	hi_write = #500000 1'b0;
end 
// lo_in[ 7 ]
initial
begin
	lo_in[7] = 1'b0;
	lo_in[7] = #80000 1'b1;
	lo_in[7] = #40000 1'b0;
	lo_in[7] = #80000 1'b1;
	lo_in[7] = #80000 1'b0;
	lo_in[7] = #40000 1'b1;
	lo_in[7] = #40000 1'b0;
	lo_in[7] = #120000 1'b1;
	lo_in[7] = #40000 1'b0;
	lo_in[7] = #80000 1'b1;
	lo_in[7] = #80000 1'b0;
	lo_in[7] = #80000 1'b1;
	lo_in[7] = #120000 1'b0;
	lo_in[7] = #40000 1'b1;
end 
// lo_in[ 6 ]
initial
begin
	lo_in[6] = 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #40000 1'b1;
	lo_in[6] = #120000 1'b0;
	lo_in[6] = #40000 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #40000 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #40000 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #120000 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #80000 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #40000 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #80000 1'b1;
	lo_in[6] = #40000 1'b0;
	lo_in[6] = #40000 1'b1;
end 
// lo_in[ 5 ]
initial
begin
	lo_in[5] = 1'b0;
	lo_in[5] = #80000 1'b1;
	lo_in[5] = #120000 1'b0;
	lo_in[5] = #80000 1'b1;
	lo_in[5] = #40000 1'b0;
	lo_in[5] = #160000 1'b1;
	lo_in[5] = #40000 1'b0;
	lo_in[5] = #40000 1'b1;
	lo_in[5] = #120000 1'b0;
	lo_in[5] = #80000 1'b1;
	lo_in[5] = #40000 1'b0;
	lo_in[5] = #120000 1'b1;
	lo_in[5] = #40000 1'b0;
end 
// lo_in[ 4 ]
initial
begin
	lo_in[4] = 1'b1;
	lo_in[4] = #40000 1'b0;
	lo_in[4] = #40000 1'b1;
	lo_in[4] = #120000 1'b0;
	lo_in[4] = #40000 1'b1;
	lo_in[4] = #40000 1'b0;
	lo_in[4] = #40000 1'b1;
	lo_in[4] = #40000 1'b0;
	lo_in[4] = #80000 1'b1;
	lo_in[4] = #80000 1'b0;
	lo_in[4] = #80000 1'b1;
	lo_in[4] = #80000 1'b0;
	lo_in[4] = #40000 1'b1;
	lo_in[4] = #40000 1'b0;
	lo_in[4] = #40000 1'b1;
	lo_in[4] = #40000 1'b0;
	lo_in[4] = #40000 1'b1;
end 
// lo_in[ 3 ]
initial
begin
	lo_in[3] = 1'b1;
	lo_in[3] = #80000 1'b0;
	lo_in[3] = #40000 1'b1;
	lo_in[3] = #120000 1'b0;
	lo_in[3] = #40000 1'b1;
	lo_in[3] = #40000 1'b0;
	lo_in[3] = #40000 1'b1;
	lo_in[3] = #160000 1'b0;
	lo_in[3] = #40000 1'b1;
	lo_in[3] = #40000 1'b0;
	lo_in[3] = #80000 1'b1;
	lo_in[3] = #40000 1'b0;
	lo_in[3] = #40000 1'b1;
	lo_in[3] = #40000 1'b0;
	lo_in[3] = #160000 1'b1;
end 
// lo_in[ 2 ]
initial
begin
	lo_in[2] = 1'b1;
	lo_in[2] = #40000 1'b0;
	lo_in[2] = #120000 1'b1;
	lo_in[2] = #80000 1'b0;
	lo_in[2] = #80000 1'b1;
	lo_in[2] = #80000 1'b0;
	lo_in[2] = #40000 1'b1;
	lo_in[2] = #40000 1'b0;
	lo_in[2] = #40000 1'b1;
	lo_in[2] = #40000 1'b0;
	lo_in[2] = #160000 1'b1;
	lo_in[2] = #160000 1'b0;
end 
// lo_in[ 1 ]
initial
begin
	lo_in[1] = 1'b1;
	lo_in[1] = #200000 1'b0;
	lo_in[1] = #120000 1'b1;
	lo_in[1] = #160000 1'b0;
	lo_in[1] = #80000 1'b1;
	lo_in[1] = #40000 1'b0;
	lo_in[1] = #40000 1'b1;
	lo_in[1] = #40000 1'b0;
	lo_in[1] = #40000 1'b1;
	lo_in[1] = #80000 1'b0;
	lo_in[1] = #40000 1'b1;
	lo_in[1] = #40000 1'b0;
	lo_in[1] = #40000 1'b1;
	lo_in[1] = #40000 1'b0;
end 
// lo_in[ 0 ]
initial
begin
	lo_in[0] = 1'b1;
	lo_in[0] = #40000 1'b0;
	lo_in[0] = #80000 1'b1;
	lo_in[0] = #40000 1'b0;
	lo_in[0] = #80000 1'b1;
	lo_in[0] = #80000 1'b0;
	lo_in[0] = #40000 1'b1;
	lo_in[0] = #40000 1'b0;
	lo_in[0] = #80000 1'b1;
	lo_in[0] = #80000 1'b0;
	lo_in[0] = #40000 1'b1;
	lo_in[0] = #40000 1'b0;
	lo_in[0] = #40000 1'b1;
	lo_in[0] = #240000 1'b0;
end 

// lo_write
initial
begin
	lo_write = 1'b1;
	lo_write = #500000 1'b0;
end 

// read_next
initial
begin
	read_next = 1'b0;
	read_next = #160000 1'b1;
	read_next = #440000 1'b0;
end 

// reset
initial
begin
	reset = 1'b1;
	reset = #270000 1'b0;
end 
endmodule

